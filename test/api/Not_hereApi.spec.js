/**
 * Authservice
 * Authservice.io provides Authentication and Authorisation services for web based applications. It can also maintain user profile information, relationship between users, and assist with communicating with users by email and SMS. 
 *
 * OpenAPI spec version: 2.0.0
 * Contact: support@authservice.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Authservice);
  }
}(this, function(expect, Authservice) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Authservice.Not_hereApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Not_hereApi', function() {
    describe('searchInventory231', function() {
      it('should call searchInventory231 successfully', function(done) {
        //uncomment below and update the code to test searchInventory231
        //instance.searchInventory231(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchInventory27', function() {
      it('should call searchInventory27 successfully', function(done) {
        //uncomment below and update the code to test searchInventory27
        //instance.searchInventory27(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchInventory28', function() {
      it('should call searchInventory28 successfully', function(done) {
        //uncomment below and update the code to test searchInventory28
        //instance.searchInventory28(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchInventory29', function() {
      it('should call searchInventory29 successfully', function(done) {
        //uncomment below and update the code to test searchInventory29
        //instance.searchInventory29(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchInventory291', function() {
      it('should call searchInventory291 successfully', function(done) {
        //uncomment below and update the code to test searchInventory291
        //instance.searchInventory291(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchInventory2b', function() {
      it('should call searchInventory2b successfully', function(done) {
        //uncomment below and update the code to test searchInventory2b
        //instance.searchInventory2b(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchInventory2c', function() {
      it('should call searchInventory2c successfully', function(done) {
        //uncomment below and update the code to test searchInventory2c
        //instance.searchInventory2c(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchInventory2d', function() {
      it('should call searchInventory2d successfully', function(done) {
        //uncomment below and update the code to test searchInventory2d
        //instance.searchInventory2d(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchInventory2e', function() {
      it('should call searchInventory2e successfully', function(done) {
        //uncomment below and update the code to test searchInventory2e
        //instance.searchInventory2e(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchInventory2f', function() {
      it('should call searchInventory2f successfully', function(done) {
        //uncomment below and update the code to test searchInventory2f
        //instance.searchInventory2f(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchInventory2g', function() {
      it('should call searchInventory2g successfully', function(done) {
        //uncomment below and update the code to test searchInventory2g
        //instance.searchInventory2g(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchInventory2h', function() {
      it('should call searchInventory2h successfully', function(done) {
        //uncomment below and update the code to test searchInventory2h
        //instance.searchInventory2h(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchInventory2i', function() {
      it('should call searchInventory2i successfully', function(done) {
        //uncomment below and update the code to test searchInventory2i
        //instance.searchInventory2i(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchInventory2j', function() {
      it('should call searchInventory2j successfully', function(done) {
        //uncomment below and update the code to test searchInventory2j
        //instance.searchInventory2j(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchInventory2k', function() {
      it('should call searchInventory2k successfully', function(done) {
        //uncomment below and update the code to test searchInventory2k
        //instance.searchInventory2k(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchInventory2m', function() {
      it('should call searchInventory2m successfully', function(done) {
        //uncomment below and update the code to test searchInventory2m
        //instance.searchInventory2m(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchInventory2n', function() {
      it('should call searchInventory2n successfully', function(done) {
        //uncomment below and update the code to test searchInventory2n
        //instance.searchInventory2n(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchInventory2o', function() {
      it('should call searchInventory2o successfully', function(done) {
        //uncomment below and update the code to test searchInventory2o
        //instance.searchInventory2o(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchInventory2q', function() {
      it('should call searchInventory2q successfully', function(done) {
        //uncomment below and update the code to test searchInventory2q
        //instance.searchInventory2q(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchInventory2r', function() {
      it('should call searchInventory2r successfully', function(done) {
        //uncomment below and update the code to test searchInventory2r
        //instance.searchInventory2r(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchInventory3', function() {
      it('should call searchInventory3 successfully', function(done) {
        //uncomment below and update the code to test searchInventory3
        //instance.searchInventory3(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchInventory3p', function() {
      it('should call searchInventory3p successfully', function(done) {
        //uncomment below and update the code to test searchInventory3p
        //instance.searchInventory3p(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchInventory5', function() {
      it('should call searchInventory5 successfully', function(done) {
        //uncomment below and update the code to test searchInventory5
        //instance.searchInventory5(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchInventory6', function() {
      it('should call searchInventory6 successfully', function(done) {
        //uncomment below and update the code to test searchInventory6
        //instance.searchInventory6(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchInventoryzzz3', function() {
      it('should call searchInventoryzzz3 successfully', function(done) {
        //uncomment below and update the code to test searchInventoryzzz3
        //instance.searchInventoryzzz3(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
